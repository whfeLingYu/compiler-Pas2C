Terminals unused in grammar

   QMARK
   LBRACE
   RBRACE


Grammar

    0 $accept: program $end

    1 program: program_head SEMICOLON program_body DOT

    2 program_head: PROGRAM IDENTIFIER LBRACKET idlist RBRACKET
    3             | PROGRAM IDENTIFIER

    4 program_body: const_declarations var_declarations subprogram_declarations compound_statement

    5 idlist: IDENTIFIER
    6       | idlist COMMA IDENTIFIER

    7 const_declarations: /* empty */
    8                   | CONST const_declaration SEMICOLON

    9 const_declaration: IDENTIFIER EQUAL const_value
   10                  | const_declaration SEMICOLON IDENTIFIER EQUAL const_value

   11 const_value: NUMBER
   12            | MINUS NUMBER
   13            | PLUS NUMBER
   14            | STRING

   15 var_declarations: /* empty */
   16                 | VAR var_declaration SEMICOLON

   17 var_declaration: idlist COLON type
   18                | var_declaration SEMICOLON idlist COLON type

   19 type: basic_type
   20     | ARRAY LBRACKET period RBRACKET OF basic_type

   21 basic_type: INTEGER
   22           | REAL
   23           | BOOLEAN
   24           | CHAR

   25 period: NUMBER DOT DOT NUMBER
   26       | period COMMA NUMBER DOT DOT NUMBER

   27 subprogram_declarations: /* empty */
   28                        | subprogram_declarations subprogram SEMICOLON

   29 subprogram: subprogram_head SEMICOLON subprogram_body

   30 subprogram_head: PROCEDURE IDENTIFIER formal_parameter
   31                | FUNCTION IDENTIFIER formal_parameter COLON basic_type

   32 formal_parameter: /* empty */
   33                 | LPAREN parameter_list RPAREN

   34 parameter_list: parameter
   35               | parameter_list SEMICOLON parameter

   36 parameter: var_parameter
   37          | value_parameter

   38 var_parameter: VAR value_parameter

   39 value_parameter: idlist COLON basic_type

   40 subprogram_body: const_declarations var_declarations compound_statement

   41 compound_statement: BEGIN statement_list END

   42 statement_list: statement
   43               | statement_list SEMICOLON statement

   44 statement: /* empty */
   45          | variable ASSIGN expression
   46          | FUNCTION ASSIGN expression
   47          | procedure_call
   48          | compound_statement
   49          | IF expression THEN statement
   50          | IF expression THEN statement ELSE statement
   51          | FOR IDENTIFIER ASSIGN expression TO expression DO statement
   52          | READ LPAREN variable_list RPAREN
   53          | WRITE LPAREN expression_list RPAREN

   54 variable_list: variable
   55              | variable_list COMMA variable

   56 variable: IDENTIFIER id_varpart

   57 id_varpart: /* empty */
   58           | LBRACKET expression RBRACKET

   59 procedure_call: IDENTIFIER
   60               | IDENTIFIER LPAREN expression_list RPAREN

   61 expression_list: expression
   62                | expression_list COMMA expression

   63 expression: simple_expression
   64           | simple_expression relop simple_expression

   65 relop: EQUAL
   66      | GREATER
   67      | LESS
   68      | LE
   69      | GE
   70      | LG

   71 simple_expression: term
   72                  | simple_expression addop term

   73 addop: PLUS
   74      | MINUS
   75      | OR

   76 term: factor
   77     | term mulop factor

   78 mulop: MUL
   79      | DIV
   80      | MOD
   81      | AND

   82 factor: NUMBER
   83       | variable
   84       | LPAREN expression RPAREN
   85       | IDENTIFIER LPAREN expression_list RPAREN
   86       | NOT factor
   87       | MINUS factor


Terminals, with rules where they appear

$end (0) 0
error (256)
PROGRAM (258) 2 3
CONST (259) 8
VAR (260) 16 38
PROCEDURE (261) 30
FUNCTION (262) 31 46
BEGIN (263) 41
END (264) 41
INTEGER (265) 21
REAL (266) 22
BOOLEAN (267) 23
CHAR (268) 24
ARRAY (269) 20
IF (270) 49 50
THEN (271) 49 50
FOR (272) 51
TO (273) 51
DO (274) 51
READ (275) 52
WRITE (276) 53
OF (277) 20
PLUS (278) 13 73
MINUS (279) 12 74 87
OR (280) 75
MUL (281) 78
DIV (282) 79
MOD (283) 80
AND (284) 81
NOT (285) 86
ASSIGN (286) 45 46 51
GREATER (287) 66
EQUAL (288) 9 10 65
LESS (289) 67
LE (290) 68
GE (291) 69
LG (292) 70
SEMICOLON (293) 1 8 10 16 18 28 29 35 43
COMMA (294) 6 26 55 62
COLON (295) 17 18 31 39
QMARK (296)
LBRACKET (297) 2 20 58
RBRACKET (298) 2 20 58
LBRACE (299)
RBRACE (300)
LPAREN (301) 33 52 53 60 84 85
RPAREN (302) 33 52 53 60 84 85
DOT (303) 1 25 26
LOWER_THAN_ELSE (304)
ELSE (305) 50
IDENTIFIER (306) 2 3 5 6 9 10 30 31 51 56 59 60 85
STRING (307) 14
NUMBER (308) 11 12 13 25 26 82
UMINUS (309)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
program (56)
    on left: 1, on right: 0
program_head (57)
    on left: 2 3, on right: 1
program_body (58)
    on left: 4, on right: 1
idlist (59)
    on left: 5 6, on right: 2 6 17 18 39
const_declarations (60)
    on left: 7 8, on right: 4 40
const_declaration (61)
    on left: 9 10, on right: 8 10
const_value (62)
    on left: 11 12 13 14, on right: 9 10
var_declarations (63)
    on left: 15 16, on right: 4 40
var_declaration (64)
    on left: 17 18, on right: 16 18
type (65)
    on left: 19 20, on right: 17 18
basic_type (66)
    on left: 21 22 23 24, on right: 19 20 31 39
period (67)
    on left: 25 26, on right: 20 26
subprogram_declarations (68)
    on left: 27 28, on right: 4 28
subprogram (69)
    on left: 29, on right: 28
subprogram_head (70)
    on left: 30 31, on right: 29
formal_parameter (71)
    on left: 32 33, on right: 30 31
parameter_list (72)
    on left: 34 35, on right: 33 35
parameter (73)
    on left: 36 37, on right: 34 35
var_parameter (74)
    on left: 38, on right: 36
value_parameter (75)
    on left: 39, on right: 37 38
subprogram_body (76)
    on left: 40, on right: 29
compound_statement (77)
    on left: 41, on right: 4 40 48
statement_list (78)
    on left: 42 43, on right: 41 43
statement (79)
    on left: 44 45 46 47 48 49 50 51 52 53, on right: 42 43 49 50 51
variable_list (80)
    on left: 54 55, on right: 52 55
variable (81)
    on left: 56, on right: 45 54 55 83
id_varpart (82)
    on left: 57 58, on right: 56
procedure_call (83)
    on left: 59 60, on right: 47
expression_list (84)
    on left: 61 62, on right: 53 60 62 85
expression (85)
    on left: 63 64, on right: 45 46 49 50 51 58 61 62 84
relop (86)
    on left: 65 66 67 68 69 70, on right: 64
simple_expression (87)
    on left: 71 72, on right: 63 64 72
addop (88)
    on left: 73 74 75, on right: 72
term (89)
    on left: 76 77, on right: 71 72 77
mulop (90)
    on left: 78 79 80 81, on right: 77
factor (91)
    on left: 82 83 84 85 86 87, on right: 76 77 86 87


state 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program       go to state 2
    program_head  go to state 3


state 1

    2 program_head: PROGRAM . IDENTIFIER LBRACKET idlist RBRACKET
    3             | PROGRAM . IDENTIFIER

    IDENTIFIER  shift, and go to state 4


state 2

    0 $accept: program . $end

    $end  shift, and go to state 5


state 3

    1 program: program_head . SEMICOLON program_body DOT

    SEMICOLON  shift, and go to state 6


state 4

    2 program_head: PROGRAM IDENTIFIER . LBRACKET idlist RBRACKET
    3             | PROGRAM IDENTIFIER .

    LBRACKET  shift, and go to state 7

    $default  reduce using rule 3 (program_head)


state 5

    0 $accept: program $end .

    $default  accept


state 6

    1 program: program_head SEMICOLON . program_body DOT

    CONST  shift, and go to state 8

    $default  reduce using rule 7 (const_declarations)

    program_body        go to state 9
    const_declarations  go to state 10


state 7

    2 program_head: PROGRAM IDENTIFIER LBRACKET . idlist RBRACKET

    IDENTIFIER  shift, and go to state 11

    idlist  go to state 12


state 8

    8 const_declarations: CONST . const_declaration SEMICOLON

    IDENTIFIER  shift, and go to state 13

    const_declaration  go to state 14


state 9

    1 program: program_head SEMICOLON program_body . DOT

    DOT  shift, and go to state 15


state 10

    4 program_body: const_declarations . var_declarations subprogram_declarations compound_statement

    VAR  shift, and go to state 16

    $default  reduce using rule 15 (var_declarations)

    var_declarations  go to state 17


state 11

    5 idlist: IDENTIFIER .

    $default  reduce using rule 5 (idlist)


state 12

    2 program_head: PROGRAM IDENTIFIER LBRACKET idlist . RBRACKET
    6 idlist: idlist . COMMA IDENTIFIER

    COMMA     shift, and go to state 18
    RBRACKET  shift, and go to state 19


state 13

    9 const_declaration: IDENTIFIER . EQUAL const_value

    EQUAL  shift, and go to state 20


state 14

    8 const_declarations: CONST const_declaration . SEMICOLON
   10 const_declaration: const_declaration . SEMICOLON IDENTIFIER EQUAL const_value

    SEMICOLON  shift, and go to state 21


state 15

    1 program: program_head SEMICOLON program_body DOT .

    $default  reduce using rule 1 (program)


state 16

   16 var_declarations: VAR . var_declaration SEMICOLON

    IDENTIFIER  shift, and go to state 11

    idlist           go to state 22
    var_declaration  go to state 23


state 17

    4 program_body: const_declarations var_declarations . subprogram_declarations compound_statement

    $default  reduce using rule 27 (subprogram_declarations)

    subprogram_declarations  go to state 24


state 18

    6 idlist: idlist COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 25


state 19

    2 program_head: PROGRAM IDENTIFIER LBRACKET idlist RBRACKET .

    $default  reduce using rule 2 (program_head)


state 20

    9 const_declaration: IDENTIFIER EQUAL . const_value

    PLUS    shift, and go to state 26
    MINUS   shift, and go to state 27
    STRING  shift, and go to state 28
    NUMBER  shift, and go to state 29

    const_value  go to state 30


state 21

    8 const_declarations: CONST const_declaration SEMICOLON .
   10 const_declaration: const_declaration SEMICOLON . IDENTIFIER EQUAL const_value

    IDENTIFIER  shift, and go to state 31

    $default  reduce using rule 8 (const_declarations)


state 22

    6 idlist: idlist . COMMA IDENTIFIER
   17 var_declaration: idlist . COLON type

    COMMA  shift, and go to state 18
    COLON  shift, and go to state 32


state 23

   16 var_declarations: VAR var_declaration . SEMICOLON
   18 var_declaration: var_declaration . SEMICOLON idlist COLON type

    SEMICOLON  shift, and go to state 33


state 24

    4 program_body: const_declarations var_declarations subprogram_declarations . compound_statement
   28 subprogram_declarations: subprogram_declarations . subprogram SEMICOLON

    PROCEDURE  shift, and go to state 34
    FUNCTION   shift, and go to state 35
    BEGIN      shift, and go to state 36

    subprogram          go to state 37
    subprogram_head     go to state 38
    compound_statement  go to state 39


state 25

    6 idlist: idlist COMMA IDENTIFIER .

    $default  reduce using rule 6 (idlist)


state 26

   13 const_value: PLUS . NUMBER

    NUMBER  shift, and go to state 40


state 27

   12 const_value: MINUS . NUMBER

    NUMBER  shift, and go to state 41


state 28

   14 const_value: STRING .

    $default  reduce using rule 14 (const_value)


state 29

   11 const_value: NUMBER .

    $default  reduce using rule 11 (const_value)


state 30

    9 const_declaration: IDENTIFIER EQUAL const_value .

    $default  reduce using rule 9 (const_declaration)


state 31

   10 const_declaration: const_declaration SEMICOLON IDENTIFIER . EQUAL const_value

    EQUAL  shift, and go to state 42


state 32

   17 var_declaration: idlist COLON . type

    INTEGER  shift, and go to state 43
    REAL     shift, and go to state 44
    BOOLEAN  shift, and go to state 45
    CHAR     shift, and go to state 46
    ARRAY    shift, and go to state 47

    type        go to state 48
    basic_type  go to state 49


state 33

   16 var_declarations: VAR var_declaration SEMICOLON .
   18 var_declaration: var_declaration SEMICOLON . idlist COLON type

    IDENTIFIER  shift, and go to state 11

    $default  reduce using rule 16 (var_declarations)

    idlist  go to state 50


state 34

   30 subprogram_head: PROCEDURE . IDENTIFIER formal_parameter

    IDENTIFIER  shift, and go to state 51


state 35

   31 subprogram_head: FUNCTION . IDENTIFIER formal_parameter COLON basic_type

    IDENTIFIER  shift, and go to state 52


state 36

   41 compound_statement: BEGIN . statement_list END

    FUNCTION    shift, and go to state 53
    BEGIN       shift, and go to state 36
    IF          shift, and go to state 54
    FOR         shift, and go to state 55
    READ        shift, and go to state 56
    WRITE       shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    $default  reduce using rule 44 (statement)

    compound_statement  go to state 59
    statement_list      go to state 60
    statement           go to state 61
    variable            go to state 62
    procedure_call      go to state 63


state 37

   28 subprogram_declarations: subprogram_declarations subprogram . SEMICOLON

    SEMICOLON  shift, and go to state 64


state 38

   29 subprogram: subprogram_head . SEMICOLON subprogram_body

    SEMICOLON  shift, and go to state 65


state 39

    4 program_body: const_declarations var_declarations subprogram_declarations compound_statement .

    $default  reduce using rule 4 (program_body)


state 40

   13 const_value: PLUS NUMBER .

    $default  reduce using rule 13 (const_value)


state 41

   12 const_value: MINUS NUMBER .

    $default  reduce using rule 12 (const_value)


state 42

   10 const_declaration: const_declaration SEMICOLON IDENTIFIER EQUAL . const_value

    PLUS    shift, and go to state 26
    MINUS   shift, and go to state 27
    STRING  shift, and go to state 28
    NUMBER  shift, and go to state 29

    const_value  go to state 66


state 43

   21 basic_type: INTEGER .

    $default  reduce using rule 21 (basic_type)


state 44

   22 basic_type: REAL .

    $default  reduce using rule 22 (basic_type)


state 45

   23 basic_type: BOOLEAN .

    $default  reduce using rule 23 (basic_type)


state 46

   24 basic_type: CHAR .

    $default  reduce using rule 24 (basic_type)


state 47

   20 type: ARRAY . LBRACKET period RBRACKET OF basic_type

    LBRACKET  shift, and go to state 67


state 48

   17 var_declaration: idlist COLON type .

    $default  reduce using rule 17 (var_declaration)


state 49

   19 type: basic_type .

    $default  reduce using rule 19 (type)


state 50

    6 idlist: idlist . COMMA IDENTIFIER
   18 var_declaration: var_declaration SEMICOLON idlist . COLON type

    COMMA  shift, and go to state 18
    COLON  shift, and go to state 68


state 51

   30 subprogram_head: PROCEDURE IDENTIFIER . formal_parameter

    LPAREN  shift, and go to state 69

    $default  reduce using rule 32 (formal_parameter)

    formal_parameter  go to state 70


state 52

   31 subprogram_head: FUNCTION IDENTIFIER . formal_parameter COLON basic_type

    LPAREN  shift, and go to state 69

    $default  reduce using rule 32 (formal_parameter)

    formal_parameter  go to state 71


state 53

   46 statement: FUNCTION . ASSIGN expression

    ASSIGN  shift, and go to state 72


state 54

   49 statement: IF . expression THEN statement
   50          | IF . expression THEN statement ELSE statement

    MINUS       shift, and go to state 73
    NOT         shift, and go to state 74
    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    NUMBER      shift, and go to state 77

    variable           go to state 78
    expression         go to state 79
    simple_expression  go to state 80
    term               go to state 81
    factor             go to state 82


state 55

   51 statement: FOR . IDENTIFIER ASSIGN expression TO expression DO statement

    IDENTIFIER  shift, and go to state 83


state 56

   52 statement: READ . LPAREN variable_list RPAREN

    LPAREN  shift, and go to state 84


state 57

   53 statement: WRITE . LPAREN expression_list RPAREN

    LPAREN  shift, and go to state 85


state 58

   56 variable: IDENTIFIER . id_varpart
   59 procedure_call: IDENTIFIER .
   60               | IDENTIFIER . LPAREN expression_list RPAREN

    LBRACKET  shift, and go to state 86
    LPAREN    shift, and go to state 87

    ASSIGN    reduce using rule 57 (id_varpart)
    $default  reduce using rule 59 (procedure_call)

    id_varpart  go to state 88


state 59

   48 statement: compound_statement .

    $default  reduce using rule 48 (statement)


state 60

   41 compound_statement: BEGIN statement_list . END
   43 statement_list: statement_list . SEMICOLON statement

    END        shift, and go to state 89
    SEMICOLON  shift, and go to state 90


state 61

   42 statement_list: statement .

    $default  reduce using rule 42 (statement_list)


state 62

   45 statement: variable . ASSIGN expression

    ASSIGN  shift, and go to state 91


state 63

   47 statement: procedure_call .

    $default  reduce using rule 47 (statement)


state 64

   28 subprogram_declarations: subprogram_declarations subprogram SEMICOLON .

    $default  reduce using rule 28 (subprogram_declarations)


state 65

   29 subprogram: subprogram_head SEMICOLON . subprogram_body

    CONST  shift, and go to state 8

    $default  reduce using rule 7 (const_declarations)

    const_declarations  go to state 92
    subprogram_body     go to state 93


state 66

   10 const_declaration: const_declaration SEMICOLON IDENTIFIER EQUAL const_value .

    $default  reduce using rule 10 (const_declaration)


state 67

   20 type: ARRAY LBRACKET . period RBRACKET OF basic_type

    NUMBER  shift, and go to state 94

    period  go to state 95


state 68

   18 var_declaration: var_declaration SEMICOLON idlist COLON . type

    INTEGER  shift, and go to state 43
    REAL     shift, and go to state 44
    BOOLEAN  shift, and go to state 45
    CHAR     shift, and go to state 46
    ARRAY    shift, and go to state 47

    type        go to state 96
    basic_type  go to state 49


state 69

   33 formal_parameter: LPAREN . parameter_list RPAREN

    VAR         shift, and go to state 97
    IDENTIFIER  shift, and go to state 11

    idlist           go to state 98
    parameter_list   go to state 99
    parameter        go to state 100
    var_parameter    go to state 101
    value_parameter  go to state 102


state 70

   30 subprogram_head: PROCEDURE IDENTIFIER formal_parameter .

    $default  reduce using rule 30 (subprogram_head)


state 71

   31 subprogram_head: FUNCTION IDENTIFIER formal_parameter . COLON basic_type

    COLON  shift, and go to state 103


state 72

   46 statement: FUNCTION ASSIGN . expression

    MINUS       shift, and go to state 73
    NOT         shift, and go to state 74
    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    NUMBER      shift, and go to state 77

    variable           go to state 78
    expression         go to state 104
    simple_expression  go to state 80
    term               go to state 81
    factor             go to state 82


state 73

   87 factor: MINUS . factor

    MINUS       shift, and go to state 73
    NOT         shift, and go to state 74
    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    NUMBER      shift, and go to state 77

    variable  go to state 78
    factor    go to state 105


state 74

   86 factor: NOT . factor

    MINUS       shift, and go to state 73
    NOT         shift, and go to state 74
    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    NUMBER      shift, and go to state 77

    variable  go to state 78
    factor    go to state 106


state 75

   84 factor: LPAREN . expression RPAREN

    MINUS       shift, and go to state 73
    NOT         shift, and go to state 74
    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    NUMBER      shift, and go to state 77

    variable           go to state 78
    expression         go to state 107
    simple_expression  go to state 80
    term               go to state 81
    factor             go to state 82


state 76

   56 variable: IDENTIFIER . id_varpart
   85 factor: IDENTIFIER . LPAREN expression_list RPAREN

    LBRACKET  shift, and go to state 86
    LPAREN    shift, and go to state 108

    $default  reduce using rule 57 (id_varpart)

    id_varpart  go to state 88


state 77

   82 factor: NUMBER .

    $default  reduce using rule 82 (factor)


state 78

   83 factor: variable .

    $default  reduce using rule 83 (factor)


state 79

   49 statement: IF expression . THEN statement
   50          | IF expression . THEN statement ELSE statement

    THEN  shift, and go to state 109


state 80

   63 expression: simple_expression .
   64           | simple_expression . relop simple_expression
   72 simple_expression: simple_expression . addop term

    PLUS     shift, and go to state 110
    MINUS    shift, and go to state 111
    OR       shift, and go to state 112
    GREATER  shift, and go to state 113
    EQUAL    shift, and go to state 114
    LESS     shift, and go to state 115
    LE       shift, and go to state 116
    GE       shift, and go to state 117
    LG       shift, and go to state 118

    $default  reduce using rule 63 (expression)

    relop  go to state 119
    addop  go to state 120


state 81

   71 simple_expression: term .
   77 term: term . mulop factor

    MUL  shift, and go to state 121
    DIV  shift, and go to state 122
    MOD  shift, and go to state 123
    AND  shift, and go to state 124

    $default  reduce using rule 71 (simple_expression)

    mulop  go to state 125


state 82

   76 term: factor .

    $default  reduce using rule 76 (term)


state 83

   51 statement: FOR IDENTIFIER . ASSIGN expression TO expression DO statement

    ASSIGN  shift, and go to state 126


state 84

   52 statement: READ LPAREN . variable_list RPAREN

    IDENTIFIER  shift, and go to state 127

    variable_list  go to state 128
    variable       go to state 129


state 85

   53 statement: WRITE LPAREN . expression_list RPAREN

    MINUS       shift, and go to state 73
    NOT         shift, and go to state 74
    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    NUMBER      shift, and go to state 77

    variable           go to state 78
    expression_list    go to state 130
    expression         go to state 131
    simple_expression  go to state 80
    term               go to state 81
    factor             go to state 82


state 86

   58 id_varpart: LBRACKET . expression RBRACKET

    MINUS       shift, and go to state 73
    NOT         shift, and go to state 74
    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    NUMBER      shift, and go to state 77

    variable           go to state 78
    expression         go to state 132
    simple_expression  go to state 80
    term               go to state 81
    factor             go to state 82


state 87

   60 procedure_call: IDENTIFIER LPAREN . expression_list RPAREN

    MINUS       shift, and go to state 73
    NOT         shift, and go to state 74
    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    NUMBER      shift, and go to state 77

    variable           go to state 78
    expression_list    go to state 133
    expression         go to state 131
    simple_expression  go to state 80
    term               go to state 81
    factor             go to state 82


state 88

   56 variable: IDENTIFIER id_varpart .

    $default  reduce using rule 56 (variable)


state 89

   41 compound_statement: BEGIN statement_list END .

    $default  reduce using rule 41 (compound_statement)


state 90

   43 statement_list: statement_list SEMICOLON . statement

    FUNCTION    shift, and go to state 53
    BEGIN       shift, and go to state 36
    IF          shift, and go to state 54
    FOR         shift, and go to state 55
    READ        shift, and go to state 56
    WRITE       shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    $default  reduce using rule 44 (statement)

    compound_statement  go to state 59
    statement           go to state 134
    variable            go to state 62
    procedure_call      go to state 63


state 91

   45 statement: variable ASSIGN . expression

    MINUS       shift, and go to state 73
    NOT         shift, and go to state 74
    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    NUMBER      shift, and go to state 77

    variable           go to state 78
    expression         go to state 135
    simple_expression  go to state 80
    term               go to state 81
    factor             go to state 82


state 92

   40 subprogram_body: const_declarations . var_declarations compound_statement

    VAR  shift, and go to state 16

    $default  reduce using rule 15 (var_declarations)

    var_declarations  go to state 136


state 93

   29 subprogram: subprogram_head SEMICOLON subprogram_body .

    $default  reduce using rule 29 (subprogram)


state 94

   25 period: NUMBER . DOT DOT NUMBER

    DOT  shift, and go to state 137


state 95

   20 type: ARRAY LBRACKET period . RBRACKET OF basic_type
   26 period: period . COMMA NUMBER DOT DOT NUMBER

    COMMA     shift, and go to state 138
    RBRACKET  shift, and go to state 139


state 96

   18 var_declaration: var_declaration SEMICOLON idlist COLON type .

    $default  reduce using rule 18 (var_declaration)


state 97

   38 var_parameter: VAR . value_parameter

    IDENTIFIER  shift, and go to state 11

    idlist           go to state 98
    value_parameter  go to state 140


state 98

    6 idlist: idlist . COMMA IDENTIFIER
   39 value_parameter: idlist . COLON basic_type

    COMMA  shift, and go to state 18
    COLON  shift, and go to state 141


state 99

   33 formal_parameter: LPAREN parameter_list . RPAREN
   35 parameter_list: parameter_list . SEMICOLON parameter

    SEMICOLON  shift, and go to state 142
    RPAREN     shift, and go to state 143


state 100

   34 parameter_list: parameter .

    $default  reduce using rule 34 (parameter_list)


state 101

   36 parameter: var_parameter .

    $default  reduce using rule 36 (parameter)


state 102

   37 parameter: value_parameter .

    $default  reduce using rule 37 (parameter)


state 103

   31 subprogram_head: FUNCTION IDENTIFIER formal_parameter COLON . basic_type

    INTEGER  shift, and go to state 43
    REAL     shift, and go to state 44
    BOOLEAN  shift, and go to state 45
    CHAR     shift, and go to state 46

    basic_type  go to state 144


state 104

   46 statement: FUNCTION ASSIGN expression .

    $default  reduce using rule 46 (statement)


state 105

   87 factor: MINUS factor .

    $default  reduce using rule 87 (factor)


state 106

   86 factor: NOT factor .

    $default  reduce using rule 86 (factor)


state 107

   84 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 145


state 108

   85 factor: IDENTIFIER LPAREN . expression_list RPAREN

    MINUS       shift, and go to state 73
    NOT         shift, and go to state 74
    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    NUMBER      shift, and go to state 77

    variable           go to state 78
    expression_list    go to state 146
    expression         go to state 131
    simple_expression  go to state 80
    term               go to state 81
    factor             go to state 82


state 109

   49 statement: IF expression THEN . statement
   50          | IF expression THEN . statement ELSE statement

    FUNCTION    shift, and go to state 53
    BEGIN       shift, and go to state 36
    IF          shift, and go to state 54
    FOR         shift, and go to state 55
    READ        shift, and go to state 56
    WRITE       shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    $default  reduce using rule 44 (statement)

    compound_statement  go to state 59
    statement           go to state 147
    variable            go to state 62
    procedure_call      go to state 63


state 110

   73 addop: PLUS .

    $default  reduce using rule 73 (addop)


state 111

   74 addop: MINUS .

    $default  reduce using rule 74 (addop)


state 112

   75 addop: OR .

    $default  reduce using rule 75 (addop)


state 113

   66 relop: GREATER .

    $default  reduce using rule 66 (relop)


state 114

   65 relop: EQUAL .

    $default  reduce using rule 65 (relop)


state 115

   67 relop: LESS .

    $default  reduce using rule 67 (relop)


state 116

   68 relop: LE .

    $default  reduce using rule 68 (relop)


state 117

   69 relop: GE .

    $default  reduce using rule 69 (relop)


state 118

   70 relop: LG .

    $default  reduce using rule 70 (relop)


state 119

   64 expression: simple_expression relop . simple_expression

    MINUS       shift, and go to state 73
    NOT         shift, and go to state 74
    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    NUMBER      shift, and go to state 77

    variable           go to state 78
    simple_expression  go to state 148
    term               go to state 81
    factor             go to state 82


state 120

   72 simple_expression: simple_expression addop . term

    MINUS       shift, and go to state 73
    NOT         shift, and go to state 74
    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    NUMBER      shift, and go to state 77

    variable  go to state 78
    term      go to state 149
    factor    go to state 82


state 121

   78 mulop: MUL .

    $default  reduce using rule 78 (mulop)


state 122

   79 mulop: DIV .

    $default  reduce using rule 79 (mulop)


state 123

   80 mulop: MOD .

    $default  reduce using rule 80 (mulop)


state 124

   81 mulop: AND .

    $default  reduce using rule 81 (mulop)


state 125

   77 term: term mulop . factor

    MINUS       shift, and go to state 73
    NOT         shift, and go to state 74
    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    NUMBER      shift, and go to state 77

    variable  go to state 78
    factor    go to state 150


state 126

   51 statement: FOR IDENTIFIER ASSIGN . expression TO expression DO statement

    MINUS       shift, and go to state 73
    NOT         shift, and go to state 74
    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    NUMBER      shift, and go to state 77

    variable           go to state 78
    expression         go to state 151
    simple_expression  go to state 80
    term               go to state 81
    factor             go to state 82


state 127

   56 variable: IDENTIFIER . id_varpart

    LBRACKET  shift, and go to state 86

    $default  reduce using rule 57 (id_varpart)

    id_varpart  go to state 88


state 128

   52 statement: READ LPAREN variable_list . RPAREN
   55 variable_list: variable_list . COMMA variable

    COMMA   shift, and go to state 152
    RPAREN  shift, and go to state 153


state 129

   54 variable_list: variable .

    $default  reduce using rule 54 (variable_list)


state 130

   53 statement: WRITE LPAREN expression_list . RPAREN
   62 expression_list: expression_list . COMMA expression

    COMMA   shift, and go to state 154
    RPAREN  shift, and go to state 155


state 131

   61 expression_list: expression .

    $default  reduce using rule 61 (expression_list)


state 132

   58 id_varpart: LBRACKET expression . RBRACKET

    RBRACKET  shift, and go to state 156


state 133

   60 procedure_call: IDENTIFIER LPAREN expression_list . RPAREN
   62 expression_list: expression_list . COMMA expression

    COMMA   shift, and go to state 154
    RPAREN  shift, and go to state 157


state 134

   43 statement_list: statement_list SEMICOLON statement .

    $default  reduce using rule 43 (statement_list)


state 135

   45 statement: variable ASSIGN expression .

    $default  reduce using rule 45 (statement)


state 136

   40 subprogram_body: const_declarations var_declarations . compound_statement

    BEGIN  shift, and go to state 36

    compound_statement  go to state 158


state 137

   25 period: NUMBER DOT . DOT NUMBER

    DOT  shift, and go to state 159


state 138

   26 period: period COMMA . NUMBER DOT DOT NUMBER

    NUMBER  shift, and go to state 160


state 139

   20 type: ARRAY LBRACKET period RBRACKET . OF basic_type

    OF  shift, and go to state 161


state 140

   38 var_parameter: VAR value_parameter .

    $default  reduce using rule 38 (var_parameter)


state 141

   39 value_parameter: idlist COLON . basic_type

    INTEGER  shift, and go to state 43
    REAL     shift, and go to state 44
    BOOLEAN  shift, and go to state 45
    CHAR     shift, and go to state 46

    basic_type  go to state 162


state 142

   35 parameter_list: parameter_list SEMICOLON . parameter

    VAR         shift, and go to state 97
    IDENTIFIER  shift, and go to state 11

    idlist           go to state 98
    parameter        go to state 163
    var_parameter    go to state 101
    value_parameter  go to state 102


state 143

   33 formal_parameter: LPAREN parameter_list RPAREN .

    $default  reduce using rule 33 (formal_parameter)


state 144

   31 subprogram_head: FUNCTION IDENTIFIER formal_parameter COLON basic_type .

    $default  reduce using rule 31 (subprogram_head)


state 145

   84 factor: LPAREN expression RPAREN .

    $default  reduce using rule 84 (factor)


state 146

   62 expression_list: expression_list . COMMA expression
   85 factor: IDENTIFIER LPAREN expression_list . RPAREN

    COMMA   shift, and go to state 154
    RPAREN  shift, and go to state 164


state 147

   49 statement: IF expression THEN statement .
   50          | IF expression THEN statement . ELSE statement

    ELSE  shift, and go to state 165

    $default  reduce using rule 49 (statement)


state 148

   64 expression: simple_expression relop simple_expression .
   72 simple_expression: simple_expression . addop term

    PLUS   shift, and go to state 110
    MINUS  shift, and go to state 111
    OR     shift, and go to state 112

    $default  reduce using rule 64 (expression)

    addop  go to state 120


state 149

   72 simple_expression: simple_expression addop term .
   77 term: term . mulop factor

    MUL  shift, and go to state 121
    DIV  shift, and go to state 122
    MOD  shift, and go to state 123
    AND  shift, and go to state 124

    $default  reduce using rule 72 (simple_expression)

    mulop  go to state 125


state 150

   77 term: term mulop factor .

    $default  reduce using rule 77 (term)


state 151

   51 statement: FOR IDENTIFIER ASSIGN expression . TO expression DO statement

    TO  shift, and go to state 166


state 152

   55 variable_list: variable_list COMMA . variable

    IDENTIFIER  shift, and go to state 127

    variable  go to state 167


state 153

   52 statement: READ LPAREN variable_list RPAREN .

    $default  reduce using rule 52 (statement)


state 154

   62 expression_list: expression_list COMMA . expression

    MINUS       shift, and go to state 73
    NOT         shift, and go to state 74
    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    NUMBER      shift, and go to state 77

    variable           go to state 78
    expression         go to state 168
    simple_expression  go to state 80
    term               go to state 81
    factor             go to state 82


state 155

   53 statement: WRITE LPAREN expression_list RPAREN .

    $default  reduce using rule 53 (statement)


state 156

   58 id_varpart: LBRACKET expression RBRACKET .

    $default  reduce using rule 58 (id_varpart)


state 157

   60 procedure_call: IDENTIFIER LPAREN expression_list RPAREN .

    $default  reduce using rule 60 (procedure_call)


state 158

   40 subprogram_body: const_declarations var_declarations compound_statement .

    $default  reduce using rule 40 (subprogram_body)


state 159

   25 period: NUMBER DOT DOT . NUMBER

    NUMBER  shift, and go to state 169


state 160

   26 period: period COMMA NUMBER . DOT DOT NUMBER

    DOT  shift, and go to state 170


state 161

   20 type: ARRAY LBRACKET period RBRACKET OF . basic_type

    INTEGER  shift, and go to state 43
    REAL     shift, and go to state 44
    BOOLEAN  shift, and go to state 45
    CHAR     shift, and go to state 46

    basic_type  go to state 171


state 162

   39 value_parameter: idlist COLON basic_type .

    $default  reduce using rule 39 (value_parameter)


state 163

   35 parameter_list: parameter_list SEMICOLON parameter .

    $default  reduce using rule 35 (parameter_list)


state 164

   85 factor: IDENTIFIER LPAREN expression_list RPAREN .

    $default  reduce using rule 85 (factor)


state 165

   50 statement: IF expression THEN statement ELSE . statement

    FUNCTION    shift, and go to state 53
    BEGIN       shift, and go to state 36
    IF          shift, and go to state 54
    FOR         shift, and go to state 55
    READ        shift, and go to state 56
    WRITE       shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    $default  reduce using rule 44 (statement)

    compound_statement  go to state 59
    statement           go to state 172
    variable            go to state 62
    procedure_call      go to state 63


state 166

   51 statement: FOR IDENTIFIER ASSIGN expression TO . expression DO statement

    MINUS       shift, and go to state 73
    NOT         shift, and go to state 74
    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    NUMBER      shift, and go to state 77

    variable           go to state 78
    expression         go to state 173
    simple_expression  go to state 80
    term               go to state 81
    factor             go to state 82


state 167

   55 variable_list: variable_list COMMA variable .

    $default  reduce using rule 55 (variable_list)


state 168

   62 expression_list: expression_list COMMA expression .

    $default  reduce using rule 62 (expression_list)


state 169

   25 period: NUMBER DOT DOT NUMBER .

    $default  reduce using rule 25 (period)


state 170

   26 period: period COMMA NUMBER DOT . DOT NUMBER

    DOT  shift, and go to state 174


state 171

   20 type: ARRAY LBRACKET period RBRACKET OF basic_type .

    $default  reduce using rule 20 (type)


state 172

   50 statement: IF expression THEN statement ELSE statement .

    $default  reduce using rule 50 (statement)


state 173

   51 statement: FOR IDENTIFIER ASSIGN expression TO expression . DO statement

    DO  shift, and go to state 175


state 174

   26 period: period COMMA NUMBER DOT DOT . NUMBER

    NUMBER  shift, and go to state 176


state 175

   51 statement: FOR IDENTIFIER ASSIGN expression TO expression DO . statement

    FUNCTION    shift, and go to state 53
    BEGIN       shift, and go to state 36
    IF          shift, and go to state 54
    FOR         shift, and go to state 55
    READ        shift, and go to state 56
    WRITE       shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    $default  reduce using rule 44 (statement)

    compound_statement  go to state 59
    statement           go to state 177
    variable            go to state 62
    procedure_call      go to state 63


state 176

   26 period: period COMMA NUMBER DOT DOT NUMBER .

    $default  reduce using rule 26 (period)


state 177

   51 statement: FOR IDENTIFIER ASSIGN expression TO expression DO statement .

    $default  reduce using rule 51 (statement)
